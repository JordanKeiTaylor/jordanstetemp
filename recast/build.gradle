import org.ajoberstar.grgit.Grgit
import org.gradle.internal.os.OperatingSystem

plugins {
  id 'org.ajoberstar.grgit' version '1.7.2' apply false
  id "cpp-library"
}

def clonePath = file("$buildDir/recastnavigation")
def libRecastLib = file(OperatingSystem.current().getStaticLibraryName("$clonePath/Recast/Recast"))
def libDetourLib = file(OperatingSystem.current().getStaticLibraryName("$clonePath/Detour/Detour"))

task(cloneRecast) {
    doLast {
        println("Cloning recast")
        if (!clonePath.exists()) {
            Grgit.clone(
                    dir: clonePath,
                    uri: 'https://github.com/recastnavigation/recastnavigation.git')
        }
    }
}

task premakeRecast(type: Exec) {
  workingDir clonePath
  commandLine "cmake", ".", "-DRECASTNAVIGATION_DEMO=OFF", "-DRECASTNAVIGATION_STATIC=ON"
  dependsOn cloneRecast
}

task buildRecast(type: Exec) {
    workingDir clonePath
    commandLine "make"
    dependsOn "premakeRecast"
}

library {
    baseName.set("recastwrapper")
}

assemble.dependsOn(buildRecast)

components.main.binaries.whenElementFinalized { binary ->
    project.dependencies {
        add(binary.linkLibraries.name, files(libRecastLib))
        add(binary.linkLibraries.name, files(libDetourLib))
    }
}